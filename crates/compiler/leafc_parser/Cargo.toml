[package]
name = "leafc_parser"
description = "A recursive descent parser for the Leaf programming language based on Red-Green Syntax Trees"
keywords = ["leafc", "parser", "recursive descent"]

version.workspace = true
categories.workspace = true
repository.workspace = true
license.workspace = true
edition.workspace = true
authors.workspace = true
readme.workspace = true

[lib]
doctest = true

[features]
default = []
all = ["allocative", "serde", "multi-threaded", "no-std"]
allocative = ["dep:allocative"]
serde = ["dep:serde"]
multi-threaded = []
no-std = []

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
leafc_diagnostics = { path = "../leafc_diagnostics" }
leafc_intern = { path = "../leafc_intern" }
leafc_lexer = { path = "../leafc_lexer" }
leafc_syntax = { path = "../leafc_syntax" }

allocative = { workspace = true, optional = true }
getset = { workspace = true }
rowan = { workspace = true }
serde = { workspace = true, features = ["derive"], optional = true }

[build-dependencies]
cargo-emit = { workspace = true }
lalrpop = { workspace = true }
