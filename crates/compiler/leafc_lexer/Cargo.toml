[package]
name = "leafc_lexer"
description = "Leafc Lexer. A pushdown automaton based lexer with idiomatic data structures."
keywords = ["leafc", "lexer", "compiler"]

version.workspace = true
categories.workspace = true
repository.workspace = true
license.workspace = true
edition.workspace = true
authors.workspace = true
readme.workspace = true

[lib]
doctest = true

[features]
default = ["multi-threaded"]
all = ["serde", "multi-threaded", "allocative"]
serde = ["dep:serde"]
multi-threaded = ["dep:parking_lot", "leafc_data_structures/multi-threaded"]
allocative = ["dep:allocative"]
no-std = ["dep:atomic"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
leafc_cfg = { path = "../leafc_cfg" }
leafc_data_structures = { path = "../leafc_data_structures" }
leafc_utils = { path = "../leafc_utils" }

atomic = { workspace = true, optional = true }
allocative = { workspace = true, optional = true }
aquamarine = { workspace = true }
clap = { workspace = true }
derivative = { workspace = true }
derive_more = { workspace = true }
derive-new = { workspace = true }
getset = { workspace = true }
log = { workspace = true }
logos = { workspace = true }
logos-derive = { workspace = true }
miette = { workspace = true }
num_cpus = { workspace = true }
owo-colors = { workspace = true }
parking_lot = { workspace = true, optional = true }
serde = { workspace = true, optional = true }
smartstring = { workspace = true }
smol_str = { workspace = true }
strum = { workspace = true }
strum_macros = { workspace = true }
typed-builder = { workspace = true }
wax = { workspace = true }

[dev-dependencies]
pretty_assertions_sorted = { workspace = true }
rstest = { workspace = true }
