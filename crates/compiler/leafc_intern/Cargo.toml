[package]
name = "leafc_intern"
description = "Leafc's interning system, which is used to intern strings and other data structures within the compiler used during the compilation lifecycle."
keywords = ["leafc", "interning", "string", "string interning", "compiler"]

version.workspace = true
categories.workspace = true
repository.workspace = true
license.workspace = true
edition.workspace = true
authors.workspace = true
readme.workspace = true

[lib]
doctest = true

[features]
default = []
all = ["multi-threaded", "serde", "allocative", "no-std"]
multi-threaded = ["lasso/multi-threaded"]
serde = ["dep:serde", "lasso/serde"]
no-std = ["lasso/no-std"]
allocative = ["dep:allocative"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
leafc_data_structures = { path = "../../shared/leafc_data_structures" }
leafc_macros = { path = "../../shared/leafc_macros" }

ahash = { workspace = true }
allocative = { workspace = true, optional = true }
aquamarine = { workspace = true }
blake3 = { workspace = true }
cfg-if = { workspace = true }
derive_more = { workspace = true }
fxhash = { workspace = true }
lasso = { workspace = true, features = ["serialize"] }
serde = { workspace = true, optional = true }
smartstring = { workspace = true }

dashmap = { version = "=5.4.0", features = ["raw-api"] }
hashbrown = { version = "0.13.2", default-features = false }
once_cell = "1.17.0"

[dev-dependencies]
pretty_assertions_sorted = { workspace = true }
rstest = { workspace = true }
