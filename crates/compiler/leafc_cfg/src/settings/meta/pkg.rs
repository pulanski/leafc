use getset::{
    Getters,
    MutGetters,
    Setters,
};

use leafc_macros::SERDE_FEATURE_USE_DECL;
use typed_builder::TypedBuilder;

SERDE_FEATURE_USE_DECL!();

/// The **name** of the compiler from the command line.
pub const EXE_NAME: &str = "leafc";

/// The **metadata** associated with the compiler.
///
/// This is also used to populate the **metadata** of the **binary**
/// generated by the compiler.
#[derive(Debug, Clone, PartialEq, Eq, Hash, TypedBuilder, Getters, MutGetters, Setters)]
// #[leafc_macros::serde_feature_impl] -> maps to below, conditional generic dependency injection
#[cfg_attr(feature = "serde", derive(Serialize, Deserialize))]
#[getset(get = "pub", get_mut = "pub", set = "pub")]
pub struct LeafcMeta {
    /// The **name** of the package.
    pub name:          String,
    /// The **version** of the package.
    pub version:       String,
    /// The **authors** of the package.
    pub authors:       Vec<String>,
    /// The **description** of the package.
    pub description:   String,
    /// The **homepage** of the package.
    pub homepage:      String,
    /// The **repository** of the package.
    pub repository:    String,
    /// The **documentation** of the package.
    pub documentation: String,
    /// The **license** of the package.
    pub license:       String,
    /// The **keywords** of the package.
    pub keywords:      Vec<String>,
    /// The **categories** of the package.
    pub categories:    Vec<String>,
    /// The **readme** of the package.
    pub readme:        String,
    /// The **edition** of the package.
    pub edition:       String,
}
