#![allow(unused_imports)] // TODO: Remove this once all nodes are implemented

/// The **kind** of a **syntax node** found in the **syntax tree**.
///
/// These can either be [**tokens**](leafc_lexer::TokenKind) generated by the
/// [**lexer**][leafc_lexer] (e.g. [`DOT`][leafc_lexer::TokenKind::DOT],
/// [`IDENTIFIER`][leafc_lexer::TokenKind::IDENTIFIER],
/// [`WHITESPACE`][leafc_lexer::TokenKind::WHITESPACE], etc.) or **non-terminal
/// AST nodes** used to represent components within the **grammar** (e.g.
/// `EXPR`, `TYPE`, `PATTERN`, etc.) and parse the **source code**. In general,
/// syntax nodes are a **supset** of the **tokens** generated by the **lexer**
/// and form the basis of both leafc's **concrete syntax trees** and **abstract
/// syntax trees**.
pub mod kinds;

pub mod tokens;

pub mod nodes;
